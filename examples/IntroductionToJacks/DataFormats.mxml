<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:flextoolbox="http://www.flextoolbox.com/2006/mxml"
	width="100%" height="100%"
	label="2. Data Formats and Default Input Values">
	
	<!--
		These containers put colored boundries under the input and output
		groupings to improve the user experience. I don't like using containers
		this way, but FXG isn't available yet.
	-->
	<mx:Container backgroundColor="0xccffee"
		x="{outputContainer.x}" y="{outputContainer.y}"
		width="{outputContainer.width}" height="{outputContainer.height}"/>
	<mx:Container backgroundColor="0xffccee"
		x="{inputContainer.x}" y="{inputContainer.y}"
		width="{inputContainer.width}" height="{inputContainer.height}"/>
	
	<!-- 
		By default, the main IWireManager is placed on the PopUpManager. Since
		these wire jacks are inside an accordion, the wires will still show
		when a different accordion page is visible.
		
		A WireSurface allows us to keep wires inside a parent container rather
		than above the entire application.
		
		Additionally, we're also putting the WireSurface below the wire jacks
		so that the wire jacks stay interactive when wires are connected. It's
		worth noting that OutputWireJacks may have multiple connections.
	-->
	<flextoolbox:WireSurface id="surface" width="100%" height="100%"/>
	
	<!-- the instructions for this section -->
	<mx:Text width="90%" top="20" horizontalCenter="0">
		<mx:text>Using custom dataFormat values allows wire jacks to specialize. Notice how they highlight differently than in Section 1.</mx:text>
	</mx:Text>
	
	<!-- OUTPUT WIRE JACKS ARE ON THE TOP -->
	<mx:HBox id="outputContainer"
		left="20" top="65" right="20" verticalAlign="middle"
		paddingTop="10" paddingRight="10" paddingBottom="10" paddingLeft="10">
	
		<mx:VBox horizontalAlign="center" width="100%">
			<mx:TextInput id="data1" text="John Doe" width="80"/>
			
			<flextoolbox:OutputWireJack id="output1" wireManager="{surface}"
				data="{data1.text}" dataFormat="text"/>
			<!-- by specifying values for the dataFormat property, we can make
				it so that some wire jacks are only compatible with specific
				types of wire jacks. -->
		</mx:VBox>
		
		<mx:Label text="OUTPUTS" width="100%" fontWeight="bold" textAlign="center"/>
		
		<mx:VBox horizontalAlign="center" width="100%">
			<mx:NumericStepper id="data2" width="80"
				value="6" minimum="0" maximum="10"/>
			
			<flextoolbox:OutputWireJack id="output2" wireManager="{surface}"
				data="{data2.value}" dataFormat="numeric"/>
		</mx:VBox>
	</mx:HBox>
	
	<!-- INPUT WIRE JACKS ARE ON THE BOTTOM -->
	<mx:HBox id="inputContainer"
		left="20" bottom="65" right="20" verticalAlign="middle"
		paddingTop="10" paddingRight="10" paddingBottom="10" paddingLeft="10">
	
		<mx:VBox horizontalAlign="center" width="100%">
			<flextoolbox:InputWireJack id="input1" wireManager="{surface}"
				acceptedDataFormat="numeric" noDataValue="0"/>
			<!-- The acceptedDataFormat property of this wire jack must match
				the dataFormat property of another wire jack before a connection
				can be made between the two wire jacks -->
				
			<mx:Label text="{input1.data}"/>
		</mx:VBox>
		
		<mx:Label text="INPUTS" width="100%" fontWeight="bold" textAlign="center"/>
	
		<mx:VBox horizontalAlign="center" width="100%">
			<flextoolbox:InputWireJack id="input2" wireManager="{surface}"
			acceptedDataFormat="text" noDataValue="Empty"/>
			
			<!-- Notice the use of the noDataValue property. This property
				allows us to customize the value of the data property on an
				InputWireJack when no other wire jacks are connected.
				By default, InputWireJacks with no connections have a data value
				of null. -->
			
			<mx:Label text="{input2.data}"/>
		</mx:VBox>
	</mx:HBox>
	<!-- the instructions for this section -->
	<mx:Text width="90%" bottom="20" horizontalCenter="0">
		<mx:text>Unlike the jacks in Section 1, the default values of these InputWireJacks are not null. Instead, we customized the noDataValue property.</mx:text>
	</mx:Text>
	
</mx:Canvas>